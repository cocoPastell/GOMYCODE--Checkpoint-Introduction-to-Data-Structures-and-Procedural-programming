ALGORITHM counter of similar number
VAR
arraySet1, arraySet2 = ARRAY_OF INTEGER[];
output, i , j = INTEGER;
counter = BOOLEAN;


BEGIN
// Initialize the arrays(or taking the input from the user), counter and output variable
arraySet1 := []
arraySet2 := []
counter = true;
output = 0;
INITIALIZE("give arraySet1, arraySet2, counter and output a value")
READ(arraySet1,arraySet2)

//Loop through Set1 and Set2 and as soon as an equal number is found, the counter changes to false.Set1 stands as reference array.
FOR (let i = 0 ; i < arraySet1.length ; i++) DO
  FOR (let j = 0 ; j < arraySet2.length, j++) DO
    IF (arraySet1[i] == arraySet2[j]) THEN
      counter = false;
    END IF
  END FOR
  //If the value of the counter is still true, the value of arraySet1[i] is added to the output and is added to the existing value.
   IF (counter == true) THEN
    output += arraySet1[i];
    END IF
  //if the value of the counter is false, it is changed to true again.  
  counter = true;
END FOR
//Loop through Set1 and Set2 and as soon as an equal number is found, the counter changes to false.Set2 stands as reference array.
FOR (let i = 0 ; i < arraySet2.length ; i++) DO
  FOR (let j = 0 ; j < arraySet1.length, j++) DO
    IF (arraySet2[i] == arraySet1[j]) THEN
      counter = false;
    END IF
  END FOR
  //If the value of the counter is still true, the value of arraySet2[i] is added to the output and is added to the existing value.
   IF (counter == true) THEN
    output += arraySet2[i];
    END IF
  //if the value of the counter is false, it is changed to true again.  
  counter = true;
END FOR

END
// Output the final output value
WRITE(output)